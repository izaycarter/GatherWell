{"version":3,"sources":["components/Login.js","components/ChurchDetail.js","components/Map.js","components/Parent.js","containers/SignUp.js","components/Profile.js","containers/CreateProfile.js","components/Header.js","components/Footer.js","components/BaseLayout.js","components/PrivateRoute.js","serviceWorker.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","headers","common","localStorage","getItem","JSON","parse","token","Login","props","state","username","email","password","handleSubmit","bind","handleChange","e","preventDefault","post","this","then","res","setItem","stringify","data","history","push","catch","error","console","log","setState","target","name","value","onSubmit","htmlFor","id","type","onChange","placeholder","required","Component","ChurchDetail","styles","require","MyMap","churches","get","defaultZoom","defaultCenter","lat","lng","defaultOptions","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","scrollwheel","map","church","key","position","WrapppedMap","withScriptjs","withGoogleMap","Map","style","width","height","googleMapURL","loadingElement","containerElement","mapElement","Parent","isViewingDetails","viewing","Row","className","SignUp","password1","password2","Geocode","setApiKey","setLanguage","Profile","image","preview","description","denomination","website","worship_type","address","isEditing","church_list","deleteChurch","editChurch","handleImageChange","updateSubmit","checked","Object","assign","file","files","reader","FileReader","onloadend","result","readAsDataURL","delete","index","indexOf","splice","prevState","fromAddress","response","results","geometry","location","formData","FormData","owner","is_verified","append","patch","find","updateChurch","src","alt","onClick","Form","Group","Label","Control","as","defaultValue","disabled","CreateProfile","createChurch","Fragment","Header","navigate","logOut","clear","to","href","Footer","BaseLayout","Container","children","isAuthenticated","PrivateRoute","component","rest","render","pathname","from","Boolean","window","hostname","match","ReactDOM","path","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91bf79ea.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"my-app-user\") ? `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token} ` : null;\n\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/login/', this.state)\n    .then(res => {\n        localStorage.setItem('my-app-user', JSON.stringify(res.data));\n        this.props.history.push('/');\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n      console.log(this.props)\n    return  (\n      <form onSubmit={this.handleSubmit}>\n        <p>\n          <label htmlFor=\"username\">Username</label>\n          <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required />\n        </p>\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required />\n        </p>\n        <p>\n          <label htmlFor=\"password\">Password</label>\n          <input id='password' type='password' name='password' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required/>\n        </p>\n        <button>Login</button>\n      </form>\n    )\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\n\nclass ChurchDetail extends Component {\n\n        render(){\n            return(\n                <div>Church stuff</div>\n            )\n        }\n}\n\nexport default ChurchDetail;\n","import React, {Component} from 'react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from \"react-google-maps\";\nimport axios from \"axios\";\nconst styles = require('./GoogleMapStyles.json')\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"my-app-user\") ? `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token} ` : null;\n\n\n// class ShowChurch extends Component {\n//     constructor(props){\n//         super(props);\n//         this.state={\n//\n//\n//         }\n//     }\n//\n//     componentDidMount(){\n//         axios.get(\"/api/v1/churches/\").then(res =>{\n//             console.log(res.data)\n//         }\n//         )\n//     }\n//     render(){\n//         return(<div></div>)\n//     }\n// }\n\nclass MyMap extends Component {\n\n    constructor(props) {\n        super(props);\n            this.state={\n            churches:[]\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\"/api/v1/churches/\")\n        .then(res => {\n            this.setState({churches: res.data})\n        })\n        .catch(error => {\n            console.log(error)\n        });\n    }\n\n    render(){\n        // let church_list = this.state.church_list[0];\n        // console.log(church_list)\n\n        return(\n\n            <GoogleMap\n                defaultZoom={10}\n                defaultCenter={{ lat: 34.8485, lng: -82.4000 }}\n                defaultOptions={{\n                disableDefaultUI: true, // disable default map UI\n                draggable: true, // make map draggable\n                keyboardShortcuts: false, // disable keyboard shortcuts\n                scaleControl: true, // allow scale controle\n                scrollwheel: false, // allow scroll wheel\n                styles: styles // change default map styles\n            }}>\n\n            {this.state.churches.map(church => {\n                return(\n                    <Marker\n                        key={church.id}\n                        position={{lat:church.lat, lng:church.lng}}\n                    />\n                )\n            })\n\n            }\n\n\n\n            </GoogleMap>\n        );\n    }\n\n}\n\nconst WrapppedMap = withScriptjs(withGoogleMap(MyMap));\n\nexport default class Map extends Component{\n    render(){\n        return(\n            <div style={{ width:\"100vw\", height:\"100vh\" }}>\n                <WrapppedMap\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyD0Xm6jvI-eFVF8O9EYDFl3pjIIfF_TGyk`}\n                    loadingElement={<div style={{height: \"100% \"}} />}\n                    containerElement={<div style={{height: \"100% \"}} />}\n                    mapElement ={<div style={{height: \"100% \"}} />}\n                    />\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport ChurchDetail from \"./ChurchDetail\";\n// import MapContainer from \"./MapContainer\";\nimport Map from \"./Map\";\nimport Row from 'react-bootstrap/Row';\n\nclass Parent extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isViewingDetails: false,\n        }\n    }\n\n    render(){\n        let viewing = this.isViewingDetails;\n        return(\n            <Row className=\"justify-content-center\">\n                {viewing ? (\n                    <div>\n                        <Map/>\n                        <ChurchDetail className=\"col-sm-12 col-md-6\"/>\n                    </div>\n                ) : (\n                    <div>\n                        <Map/>\n                    </div>\n                )}\n            </Row>\n        )\n\n    }\n}\n\nexport default Parent;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass SignUp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/registration/', this.state)\n    .then(res => {\n        localStorage.setItem('my-app-user', JSON.stringify(res.data));\n        this.props.history.push('/');\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n      console.log(this.props)\n    return  (\n      <form onSubmit={this.handleSubmit}>\n        <p>\n          <label htmlFor=\"username\">Username</label>\n          <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required />\n        </p>\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required />\n        </p>\n        <p>\n          <label htmlFor=\"password\">Password</label>\n          <input id='password1' type='password' name='password1' value={this.state.password1} onChange={this.handleChange} placeholder='Enter password' required/>\n        </p>\n        <p>\n          <label htmlFor=\"password\">Password</label>\n          <input id='password2' type='password' name='password2' value={this.state.password2} onChange={this.handleChange} placeholder='Enter password' required/>\n        </p>\n        <button>Sign Up</button>\n      </form>\n    )\n  }\n}\n\nexport default SignUp;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport Form from 'react-bootstrap/Form';\nimport Geocode from \"react-geocode\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"my-app-user\") ? `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token} ` : null;\n\nGeocode.setApiKey(\"AIzaSyD0Xm6jvI-eFVF8O9EYDFl3pjIIfF_TGyk\");\nGeocode.setLanguage(\"en\");\n\n\nclass Profile extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name:\"\",\n            image: null,\n            preview: null,\n            description:\"\",\n            denomination:\"\",\n            website:\"\",\n            worship_type:\"\",\n            address: \"\",\n            lat:0,\n            lng:0,\n            isEditing: false,\n            church_list:[],\n            church: {},\n        }\n        this.deleteChurch = this.deleteChurch.bind(this);\n        this.editChurch = this.editChurch.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleImageChange = this.handleImageChange.bind(this);\n        this.updateSubmit = this.updateSubmit.bind(this);\n    }\n\n\n\n    componentDidMount(){\n        axios.get(\"/api/v1/user/churches/\")\n        .then(res =>{\n            this.setState({church_list: res.data});\n\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n    }\n\n    handleChange(e){\n        // const target = e.target;\n        const name = e.target.name;\n        const value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n\n        let church = Object.assign({}, this.state.church);\n        church[e.target.name] = e.target.value;\n\n        this.setState({[name]: value, church});\n        console.log(church)\n    }\n\n    handleImageChange(e){\n        let file = e.target.files[0]\n        // the way not using []\n        let church = Object.assign({}, this.state.church);\n        church.image = file;\n\n        this.setState({image: file, church});\n\n        // optional visual for users\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n\n        // asynconios\n        reader.readAsDataURL(file);\n\n    }\n\n    deleteChurch(church){\n        console.log('church', church);\n        axios.delete(`/api/v1/churches/${church.id}/`)\n        .then(res =>{\n            let church_list = [...this.state.church_list];\n            let index = church_list.indexOf(res.data);\n            church_list.splice(index, 1);\n            this.setState({church_list});\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    editChurch(church){\n        this.setState((prevState)=>({isEditing: !prevState.isEditing , church:church ,name:church.name,description:church.description,denomination:church.denomination,website:church.website,worship_type:church.worship_type,address:church.address,lat:church.lat, lng:church.lng })\n         )\n    }\n\n    updateSubmit(e){\n        e.preventDefault();\n\n\n        let updateChurch = () =>{\n\n            let formData = new FormData();\n            let church = Object.assign({}, this.state.church);\n\n            if(typeof church.image === \"string\") {\n                delete church.image\n            }\n\n            delete church.owner\n            delete church.is_verified\n\n            for (var key in church) {\n                formData.append(key, church[key]);\n            }\n\n            axios.patch(`/api/v1/churches/${this.state.church.id}/`, formData, {\n                headers: {\n                    \"content-type\": \"multipart/form-data\"\n                }\n            })\n            .then(res => {\n                console.log(res);\n                // update the profile inside your profiles array on state\n                let church_list = [...this.state.church_list];\n                let church = church_list.find(church => {\n                    return church.id === res.data.id\n                });\n                church = Object.assign(church, res.data);\n\n                this.setState((prevState, props) => ({isEditing: !prevState.isEditing, church_list:church_list}));\n\n            })\n            .catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        Geocode.fromAddress(this.state.address).then(\n          response => {\n            let { lat, lng } = response.results[0].geometry.location;\n            let church = Object.assign({}, this.state.church);\n            church[\"lat\"]=lat;\n            church[\"lng\"]=lng;\n            this.setState({lat:lat, lng:lng, church});\n            updateChurch(this.state.church);\n          },\n          error => {\n            console.error(error);\n        });\n    }\n\n    render(){\n        const isEditing = this.state.isEditing;\n\n        let church_list = this.state.church_list.map(church => (\n                <li key={church.id}>\n                <h2>{church.name}</h2>\n                <img src={church.image} alt=\"church profile\" />\n                <p>{church.description}</p>\n                <p>{church.denomination}</p>\n                <p>{church.worship_type}</p>\n                <p>{church.website}</p>\n                <p>{church.address}</p>\n\n                <button onClick={() => this.editChurch(church)}>Edit Church</button>\n                <button onClick={() => this.deleteChurch(church)}>Delete Church</button>\n                </li>\n        ));\n        return(\n            <section>\n                {isEditing ? (\n                    <Form onSubmit={this.updateSubmit}>\n                        <label>Church name:\n                        <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\n                        </label>\n\n                        <label>Website Link\n                        <input type=\"text\" name=\"website\" value={this.state.website} onChange={this.handleChange}/>\n                        </label>\n\n                        <label>Address:\n                        <input type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange}/>\n                        </label>\n\n                        <Form.Group>\n                            <Form.Label>Denomination Type</Form.Label>\n                            <Form.Control as=\"select\" defaultValue={this.state.denomination} name=\"denomination\" onChange={this.handleChange}>\n                                <option value=\"\" disabled>Please Choose selcetion:</option>\n                                <option value=\"NON DENOMINATIONAL\">Non Denominational</option>\n                                <option value=\"CATHOLIC\">Catholic</option>\n                                <option value=\"ADVENTIST\">Adventist</option>\n                                <option value=\"ANABAPTIST\">Anabaptist</option>\n                                <option value=\"ANGLICAN\">Anglican</option>\n                                <option value=\"BAPTIST\">Baptist</option>\n                                <option value=\"CALVINIST\">Calvinist</option>\n                                <option value=\"EVANGELICAL\">Evangelical</option>\n                                <option value=\"HOLINESS\">Holiness</option>\n                                <option value=\"LUTHERAN\">Lutheran</option>\n                                <option value=\"METHODIST\">Methodist</option>\n                                <option value=\"PENTECOSTAL\">Pentecostal</option>\n                                <option value=\"ASSYRIAN\">Assyrian</option>\n                                <option value=\"EASTERN ORTHODOX\">Eastern Orthodox</option>\n                                <option value=\"JEHOVAH'S WITNESS\">Jehovah's Witness</option>\n                                <option value=\"LATTER DAY SAINT\">Latter Day Saint</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Worship Type</Form.Label>\n                            <Form.Control as=\"select\" defaultValue={this.state.worship_type}  name=\"worship_type\" onChange={this.handleChange}>\n                                <option value=\"\"  disabled>Please Choose selcetion:</option>\n                                <option value=\"NON LITURGICAL\">Liturgical</option>\n                                <option value=\"TRADITIONAL\">Traditional</option>\n                                <option value=\"BLENDED\">Blended</option>\n                                <option value=\"CONTEMPORARY\">Contemporary</option>\n                                <option value=\"MODERN\">Modern</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <label>description\n                        <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange}/>\n                        </label>\n\n                        <label>Add Profile Picture\n                        <input type=\"file\" name=\"image\" onChange={this.handleImageChange}/>\n                        </label>\n                        {this.state.image ? (\n                            <img src={this.state.preview} alt=\"preview\"/>\n                        ) : (\n                            null\n                        )}\n\n                        <button>Update</button>\n                    </Form>\n                ) : (\n                    <ul>\n                        {church_list}\n                    </ul>)}\n\n            </section>\n\n        )\n    }\n}\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport Form from 'react-bootstrap/Form';\nimport Geocode from \"react-geocode\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"my-app-user\") ? `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token} ` : null;\n\nGeocode.setApiKey(\"AIzaSyD0Xm6jvI-eFVF8O9EYDFl3pjIIfF_TGyk\");\nGeocode.setLanguage(\"en\");\n\nclass CreateProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name:\"\",\n            image: null,\n            preview: null,\n            is_verified: false,\n            description:\"\",\n            denomination:\"\",\n            website:\"\",\n            worship_type:\"\",\n            address: \"\",\n            lat:0,\n            lng:0,\n            church_list:[]\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleImageChange = this.handleImageChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleChange(e){\n        let key = e.target.name;\n        const value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n        this.setState({[key]: value});\n    }\n\n    handleImageChange(e){\n        let file = e.target.files[0]\n        // the way not using []\n        this.setState({image: file});\n\n        // optional visual for users\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n\n        // asynconios\n        reader.readAsDataURL(file);\n\n    }\n\n    // generateCoordinates() {\n    //\n    //     this.handleSubmit();\n    // }\n\n    handleSubmit(e){\n        e.preventDefault();\n\n        let createChurch = () => {\n\n            let formData = new FormData();\n            formData.append(\"name\", this.state.name);\n            formData.append(\"image\", this.state.image);\n            formData.append(\"is_verified\", this.state.is_verified);\n            formData.append(\"description\", this.state.description);\n            formData.append(\"denomination\", this.state.denomination);\n            formData.append(\"website\", this.state.website);\n            formData.append(\"worship_type\", this.state.worship_type);\n            formData.append(\"address\", this.state.address);\n            formData.append(\"lat\", this.state.lat);\n            formData.append(\"lng\", this.state.lng);\n\n\n            axios.post(\"/api/v1/churches/\", formData, {\n                headers: {\n                    \"content-type\": \"multipart/form-data\"\n                }\n            })\n            .then(res => {\n                let church_list = [...this.state.church_list];\n                church_list.push(res.data);\n\n                this.setState({name:\"\",\n                image: null,\n                preview: null,\n                is_verified: false,\n                description:\"\",\n                denomination:\"\",\n                website:\"\",\n                worship_type:\"\",\n                address:\"\",\n                lng:0,\n                lat:0 });\n            })\n            .catch(error => {\n                console.log(error)\n            });\n        }\n\n        Geocode.fromAddress(this.state.address).then(\n          response => {\n            let { lat, lng } = response.results[0].geometry.location;\n            this.setState({lat:lat, lng:lng}, createChurch);\n\n          },\n          error => {\n            console.error(error);\n          });\n\n\n    }\n\n\n    render(){\n        // let recipes = this.state.recipes.map(recipe => (\n        //     <li key={recipe.id}>\n        //         <p>{recipe.title}</p>\n        //         <img src={recipe.image} alt=\"\"/>\n        //     </li>\n        // ))\n        return(\n            <React.Fragment>\n                <Form onSubmit={this.handleSubmit}>\n                    <label>Church name:\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\n                    </label>\n\n                    <label>Website Link:\n                    <input type=\"text\" name=\"website\" value={this.state.website} onChange={this.handleChange}/>\n                    </label>\n\n                    <label>Address:\n                    <input type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange}/>\n                    </label>\n\n                    <Form.Group>\n                        <Form.Label>Denomination Type</Form.Label>\n                        <Form.Control as=\"select\" name=\"denomination\" onChange={this.handleChange}>\n                            <option value=\"NON DENOMINATIONAL\">Non Denominational</option>\n                            <option value=\"CATHOLIC\">Catholic</option>\n                            <option value=\"ADVENTIST\">Adventist</option>\n                            <option value=\"ANABAPTIST\">Anabaptist</option>\n                            <option value=\"ANGLICAN\">Anglican</option>\n                            <option value=\"BAPTIST\">Baptist</option>\n                            <option value=\"CALVINIST\">Calvinist</option>\n                            <option value=\"EVANGELICAL\">Evangelical</option>\n                            <option value=\"HOLINESS\">Holiness</option>\n                            <option value=\"LUTHERAN\">Lutheran</option>\n                            <option value=\"METHODIST\">Methodist</option>\n                            <option value=\"PENTECOSTAL\">Pentecostal</option>\n                            <option value=\"ASSYRIAN\">Assyrian</option>\n                            <option value=\"EASTERN ORTHODOX\">Eastern Orthodox</option>\n                            <option value=\"JEHOVAH'S WITNESS\">Jehovah's Witness</option>\n                            <option value=\"LATTER DAY SAINT\">Latter Day Saint</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Worship Type</Form.Label>\n                        <Form.Control as=\"select\" name=\"worship_type\" onChange={this.handleChange}>\n                            <option value=\"NON LITURGICAL\">Liturgical</option>\n                            <option value=\"TRADITIONAL\">Traditional</option>\n                            <option value=\"BLENDED\">Blended</option>\n                            <option value=\"CONTEMPORARY\">Contemporary</option>\n                            <option value=\"MODERN\">Modern</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <label>description\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange}/>\n                    </label>\n\n                    <label>Add Profile Picture\n                    <input type=\"file\" name=\"image\" onChange={this.handleImageChange}/>\n                    </label>\n\n\n                    {this.state.image ? (\n                        <img src={this.state.preview} alt=\"preview\"/>\n                    ) : (\n                        null\n                    )}\n\n                    <button>Upload</button>\n                </Form>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CreateProfile;\n","import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport {Redirect ,Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"my-app-user\") ? `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token} ` : null;\n\n\n// let isAuthenticated = localStorage.getItem(\"my-app-user\") !== null ? true: false;\nclass Header extends Component{\n\n    state = {\n        navigate: false\n    };\n\n    logOut = () => {\n        axios.post(\"/api/v1/rest-auth/logout/\")\n        .then( localStorage.clear(\"Token\"),\n        this.setState({navigate: true})).catch(error => {\n        console.log(error);\n    });\n\n    }\n\n    render(){\n        const { navigate } = this.state;\n\n        if(navigate){\n            return <Redirect to=\"/\" push={true} />;\n        }\n        return (\n            <Row className=\"justify-content-center\">\n                <h1 className=\"d-flex col-sm-12 col-md justify-content-center\">Gathering Well</h1>\n                <nav className=\"row align-items-end\">\n                    <ul className=\"row no-gutters navlinks justify-content-center\">\n                        <li className=\"d-flex justify-content-center col-sm-12 col-md-auto pr-0 pl-0\"><Link to=\"/\">| Home |</Link></li>\n                        <li className=\"d-flex justify-content-center col-sm-12 col-md-auto pr-0 pl-0\"><Link to=\"/login/\">| Church Login |</Link></li>\n                        <li className=\"d-flex justify-content-center col-sm-12 col-md-auto pr-0 pl-0\"><Link to=\"/profile/\">| Profile |</Link></li>\n                        <li className=\"d-flex justify-content-center col-sm-12 col-md-auto pr-0 pl-0\"><Link to=\"/profile/create/\">| Submit church profile |</Link></li>\n                        <li className=\"d-flex justify-content-center col-sm-12 col-md-auto pr-0 pl-0\"><button onClick={this.logOut} href=\"/\">Log Out</button></li>\n                    </ul>\n                </nav>\n\n            </Row>\n        )\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\n\nclass Footer extends Component{\n\n    render(){\n      return (\n        <Row>\n            <div>\n                Footer Page\n            </div>\n        </Row>\n      )\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nfunction BaseLayout(props) {\n\n  return (\n    <Container>\n        <Header />\n        {props.children}\n        <Footer />\n    </Container>\n  );\n}\n\nexport default BaseLayout;\n","import React from 'react';\nimport {Redirect , Route} from \"react-router-dom\";\n\n\nlet isAuthenticated = localStorage.getItem(\"my-app-user\") !== null ? true: false;\n\n\nconst PrivateRoute = ({component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        isAuthenticated ? (\n            <Component {...props}/>\n        ) : (\n            <Redirect to={{\n                pathname: \"/login/\",\n                state: {from: props.location}\n            }}/>\n        )\n    )}/>\n);\n\nexport default PrivateRoute;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './components/Login';\nimport Parent from \"./components/Parent\";\nimport SignUp from \"./containers/SignUp\";\nimport Profile from \"./components/Profile\";\nimport CreateProfile from \"./containers/CreateProfile\";\nimport BaseLayout from \"./components/BaseLayout\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <BaseLayout>\n            <Switch>\n                <PrivateRoute path=\"/profile/create/\" component={CreateProfile}/>\n                <PrivateRoute path=\"/profile/\" component={Profile}/>\n                <Route path=\"/signup/\" component={SignUp}/>\n                <Route path='/login/' component={Login}/>\n                <Route exact path=\"/\" component={Parent}/>\n            </Switch>\n        </BaseLayout>\n    </Router>\n, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}