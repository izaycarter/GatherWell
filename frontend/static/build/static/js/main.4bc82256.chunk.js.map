{"version":3,"sources":["components/Login.js","components/ChurchDetail.js","components/MapFilter.js","components/Map.js","components/Parent.js","containers/SignUp.js","components/UpdateChurchForm.js","components/EventForm.js","components/Profile.js","containers/CreateProfile.js","components/Header.js","components/BaseLayout.js","components/PrivateRoute.js","serviceWorker.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","Login","props","state","username","email","password","handleSubmit","bind","handleChange","e","preventDefault","post","this","then","res","localStorage","setItem","JSON","stringify","data","history","push","catch","error","console","log","setState","target","name","value","className","Card","bg","text","Header","Body","onSubmit","htmlFor","id","type","onChange","placeholder","required","Footer","href","Component","ChurchDetail","phone_number","key","selected_church_id","selectedChurch","churchEvent","events","filter","church","map","thisEvent","date","address","Title","title","description","Modal","size","aria-labelledby","centered","closeButton","src","image","atl","lat","lng","denomination","worship_type","website","maxLength","Button","onClick","onHide","MapFilter","Row","Form","Group","Label","Control","as","defaultValue","styles","require","MyMap","compose","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","defaultOptions","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","zoomControl","scrollwheel","churches","is_verified","position","Map","handleClick","event","ShowModal","filteredChurches","selctedMarker","get","style","width","height","selectedMarker","googleMapURL","process","loadingElement","containerElement","mapElement","show","Parent","isViewing","SignUp","password1","password2","Geocode","setApiKey","setLanguage","UpdateChurchForm","preview","updateSubmit","Object","assign","disabled","alt","EventForm","submitEvent","newEvent","Profile","isEditing","addingEvent","church_list","deleteChurch","editChurch","handleImageChange","headers","parse","getItem","token","file","files","reader","FileReader","onloadend","result","readAsDataURL","delete","index","indexOf","splice","prevState","formData","FormData","append","fromAddress","response","results","geometry","location","owner","patch","find","updateChurch","churchList","CreateProfile","checked","createChurch","Fragment","logOut","removeItem","isAuthenticated","Navbar","collapseOnSelect","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","BaseLayout","children","PrivateRoute","component","rest","render","to","pathname","from","Boolean","window","hostname","match","ReactDOM","path","exact","rel","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bc82256.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Card, Row} from 'react-bootstrap';\nimport \"../Css/Login.css\"\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    axios.post('/api/v1/rest-auth/login/', this.state)\n    .then(res => {\n        localStorage.setItem('my-app-user', JSON.stringify(res.data));\n        this.props.history.push('/');\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n    return  (\n            <section className=\"col\">\n                <Card bg=\"primary\" text=\"white\">\n                    <Card.Header>Login</Card.Header>\n                    <Card.Body>\n                      <form onSubmit={this.handleSubmit}>\n                        <p>\n                          <label htmlFor=\"username\">Username</label>\n                          <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required />\n                        </p>\n                        <p>\n                          <label htmlFor=\"email\">Email</label>\n                          <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required />\n                        </p>\n                        <p>\n                          <label htmlFor=\"password\">Password</label>\n                          <input id='password' type='password' name='password' value={this.state.password} onChange={this.handleChange} placeholder='Enter password' required/>\n                        </p>\n                        <button>Login</button>\n                      </form>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small>Don't have an acount? <a href=\"/signup/\"><span>Click here to Sign up.</span></a></small>\n                    </Card.Footer>\n              </Card>\n          </section>\n    )\n  }\n}\n\nexport default Login;\n","import React , {Component} from 'react';\nimport {Button,  Modal , Card} from \"react-bootstrap\";\nimport \"../Css/ChurchDetail.css\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass ChurchDetail extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            phone_number:\"\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    handleChange(e){\n        let key = e.target.name;\n        let value = e.target.value;\n        this.setState({[key]: value});\n        console.log()\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        axios.post(`/api/v1/churches/subscribers/add/`, {phone_number: this.state.phone_number, selected_church_id:this.props.selectedChurch.id})\n        .then(res =>{\n            console.log(res)\n        })\n        .catch()\n\n    }\n\n    render(){\n        let thisChurch = this.props.events.filter(events => events.church === this.props.selectedChurch.id);\n\n        let churchEvent = thisChurch.map(thisEvent =>(\n            <li key={thisEvent.id}>\n                <Card bg=\"primary\" text=\"white\">\n                    <Card.Header>On {thisEvent.date} At {thisEvent.address}</Card.Header>\n                    <Card.Title>{thisEvent.title}</Card.Title>\n                    <Card.Body>{thisEvent.description}</Card.Body>\n                </Card>\n            </li>\n        ));\n      return (\n        <Modal\n          {...this.props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <img className=\"church-picture\" src={this.props.selectedChurch.image} atl={this.props.selectedChurch.name} />\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <h3>{this.props.selectedChurch.name}</h3>\n\n            <a href={`https://www.google.com/maps/search/?api=1&query=${this.props.selectedChurch.lat},${this.props.selectedChurch.lng}`} target=\"_blank\">{this.props.selectedChurch.address}</a>\n            <div>Denomination: {this.props.selectedChurch.denomination}</div>\n            <div>Worship Style: {this.props.selectedChurch.worship_type}</div>\n            <p>\n             {this.props.selectedChurch.description}\n            </p>\n\n            <a href={this.props.selectedChurch.website} target=\"_blank\">{this.props.selectedChurch.website}</a>\n            <form onSubmit={this.onSubmit}>\n                <p>{`want to know about new upcoming events for ${this.props.selectedChurch.name}?`}</p>\n                <label htmlFor=\"phone_number\">enter phone number\n                <input type=\"text\" name=\"phone_number\" value={this.state.phone_number} onChange={this.handleChange} maxLength=\"10\" placeholder=\"ex. 8641234567\"></input>\n                <button>Follow!</button>\n                </label>\n            </form>\n            <ul>\n                {churchEvent}\n            </ul>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.props.onHide}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n}\n\nexport default ChurchDetail;\n","import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\n\nclass MapFilter extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n\n        }\n    }\n\n\n\n    render(){\n      return (\n        <Row className=\"justify-content-center\">\n            <div className=\"d-flex\">\n            <Form.Group className=\"\">\n                <Form.Label>Denomination Type</Form.Label>\n                <Form.Control as=\"select\" defaultValue=\"Any\" name=\"denomination\" onChange={this.props.handleChange}>\n                    <option value=\"Any\" >Any</option>\n                    <option value=\"NON DENOMINATIONAL\">Non Denominational</option>\n                    <option value=\"CATHOLIC\">Catholic</option>\n                    <option value=\"ADVENTIST\">Adventist</option>\n                    <option value=\"ANABAPTIST\">Anabaptist</option>\n                    <option value=\"ANGLICAN\">Anglican</option>\n                    <option value=\"BAPTIST\">Baptist</option>\n                    <option value=\"CALVINIST\">Calvinist</option>\n                    <option value=\"EVANGELICAL\">Evangelical</option>\n                    <option value=\"HOLINESS\">Holiness</option>\n                    <option value=\"LUTHERAN\">Lutheran</option>\n                    <option value=\"METHODIST\">Methodist</option>\n                    <option value=\"PENTECOSTAL\">Pentecostal</option>\n                    <option value=\"ASSYRIAN\">Assyrian</option>\n                    <option value=\"EASTERN ORTHODOX\">Eastern Orthodox</option>\n                    <option value=\"JEHOVAH'S WITNESS\">Jehovah's Witness</option>\n                    <option value=\"LATTER DAY SAINT\">Latter Day Saint</option>\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group className=\"\">\n                <Form.Label>Worship Type</Form.Label>\n                <Form.Control as=\"select\" defaultValue=\"Any\" name=\"worship_type\" onChange={this.props.handleChange}>\n                    <option value=\"Any\" >Any</option>\n                    <option value=\"NON LITURGICAL\">Liturgical</option>\n                    <option value=\"TRADITIONAL\">Traditional</option>\n                    <option value=\"BLENDED\">Blended</option>\n                    <option value=\"CONTEMPORARY\">Contemporary</option>\n                    <option value=\"MODERN\">Modern</option>\n                </Form.Control>\n            </Form.Group>\n            </div>\n        </Row>\n      )\n  }\n}\n\nexport default MapFilter;\n","import React, {Component} from 'react';\nimport { compose } from \"recompose\"\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport axios from \"axios\";\nimport ChurchDetail from \"./ChurchDetail\";\nimport MapFilter from \"./MapFilter\";\nconst styles = require('./GoogleMapStyles.json')\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\n\n\nconst MyMap = compose(withScriptjs, withGoogleMap) ( props =>{\n    return(\n\n        <GoogleMap\n            defaultZoom={10}\n            defaultCenter={{ lat: 34.8485, lng: -82.4000 }}\n            defaultOptions={{\n            disableDefaultUI: true, // disable default map UI\n            draggable: true, // make map draggable\n            keyboardShortcuts: false, // disable keyboard shortcuts\n            scaleControl: true, // allow scale controle\n            zoomControl: true,\n            scrollwheel: false, // allow scroll wheel\n            styles: styles // change default map styles\n        }}>\n            {props.churches.map(church =>{\n                const onClick = props.onClick.bind(this,church)\n                const isVerified = church.is_verified\n                    if (isVerified){\n                        return(\n                                <Marker\n                                    key={church.id}\n                                    onClick={onClick}\n                                    position={{ lat:church.lat, lng:church.lng }}\n                                >\n                                </Marker>\n                        )\n                    }\n\n            })}\n        </GoogleMap>\n    )\n});\n\n\n\n\n\n\n// const WrapppedMap = withScriptjs(withGoogleMap(MyMap));\n\nexport default class Map extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            churches:[],\n            filteredChurches: [],\n            selctedMarker:false,\n            selectedChurch: [],\n            ShowModal: false,\n            events:[],\n            worship_type:'Any',\n            denomination:'Any',\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\"/api/v1/churches/\")\n        .then(res => {\n            this.setState({churches: res.data, filteredChurches: res.data})\n        })\n        .catch(error => {\n            console.log(error)\n        });\n        axios.get(\"/api/v1/user/church/events/\")\n        .then(res =>{\n            this.setState({events: res.data});\n        }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    handleClick = (church, event) => {\n        this.setState({ selectedChurch: church })\n        this.setState({ ShowModal: true })\n    }\n\n    handleChange = (e) => {\n        let key = e.target.name;\n        let value = e.target.value;\n        let churches = [...this.state.churches];\n        let filter\n\n\n\n        let runfilter = (filter) => {\n\n            if(this.state.worship_type !== 'Any'){\n\n                if(this.state.denomination !== 'Any') {\n                    filter = churches.filter(church => {\n                        return church[\"worship_type\"] === this.state.worship_type && church[\"denomination\"] === this.state.denomination\n                    });\n\n                } else {\n                    filter = churches.filter(church => {\n                        return church[\"worship_type\"] === this.state.worship_type\n                    })\n                }\n\n            } else if(this.state.denomination !== 'Any') {\n\n                    filter = churches.filter(church => {\n                        return church[\"denomination\"] === this.state.denomination\n                    })\n\n            }\n\n             else {\n                 filter = churches.filter(church => {\n                     return true\n                 })\n            }\n            this.setState({filteredChurches: filter})\n\n        }\n        this.setState({[key]:value},runfilter)\n\n\n\n\n\n        // console.log('filtered', filteredChurches);\n\n        // update this.state.filteredChurches based on filter results\n    }\n\n\n    render(){\n        let selectedChurch = this.state.ShowModal\n\n        return(\n\n            <div className=\"\" style={{ width:\"100vw\", height:\"100vh\" }}>\n                <MapFilter handleChange={this.handleChange}/>\n                <MyMap\n                    selectedMarker={this.state.selectedMarker}\n                    churches={this.state.filteredChurches}\n                    onClick={this.handleClick}\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\n                    loadingElement={<div style={{height: \"100% \"}} />}\n                    containerElement={<div style={{height: \"100% \"}} />}\n                    mapElement ={<div style={{height: \"100% \"}} />}\n\n                    />\n                {selectedChurch ?  <ChurchDetail\n                    selectedChurch={this.state.selectedChurch}\n                    show={this.state.ShowModal}\n                    onHide={() => this.setState({ShowModal:false})}\n                    events={this.state.events}\n                />: null\n                }\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\n// import ChurchDetail from \"./ChurchDetail\";\n// import MapContainer from \"./MapContainer\";\nimport Map from \"./Map\";\n// import Row from 'react-bootstrap/Row';\n\nclass Parent extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isViewing: false\n        }\n        // this.showDetails = this.showDetails.bind(this);\n    }\n\n    // showDetails(){\n    //     this.setState((prevState)=>({isViewing: !prevState.isViewing}));\n    //     console.log(this.state.isViewing);\n    // }\n\n    render(){\n\n        return(\n            <div>\n                <Map className=\"col-sm-12\" />\n            </div>\n        )\n\n    }\n}\n\nexport default Parent;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass SignUp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    axios.post('/api/v1/rest-auth/registration/', this.state)\n    .then(res => {\n        localStorage.setItem('my-app-user', JSON.stringify(res.data));\n        this.props.history.push('/');\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n      console.log(this.props)\n    return  (\n      <form onSubmit={this.handleSubmit}>\n        <p>\n          <label htmlFor=\"username\">Username</label>\n          <input id='username' type='text' name='username' value={this.state.username} onChange={this.handleChange} placeholder='Enter username' required />\n        </p>\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id='email' type='email' name='email' value={this.state.email} onChange={this.handleChange} placeholder='Enter email' required />\n        </p>\n        <p>\n          <label htmlFor=\"password\">Password</label>\n          <input id='password1' type='password' name='password1' value={this.state.password1} onChange={this.handleChange} placeholder='Enter password' required/>\n        </p>\n        <p>\n          <label htmlFor=\"password\">Password</label>\n          <input id='password2' type='password' name='password2' value={this.state.password2} onChange={this.handleChange} placeholder='Enter password' required/>\n        </p>\n        <button>Sign Up</button>\n      </form>\n    )\n  }\n}\n\nexport default SignUp;\n","import React, {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport axios from \"axios\";\nimport Geocode from \"react-geocode\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\nGeocode.setLanguage(\"en\");\n\nclass UpdateChurchForm extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            name:\"\",\n            image: null,\n            preview: null,\n            description:\"\",\n            denomination:\"\",\n            website:\"\",\n            worship_type:\"\",\n            address: \"\",\n            lat:0,\n            lng:0\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updateSubmit = this.updateSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        console.log(e.target.name, e.target.value);\n        this.setState({[e.target.name]: e.target.value});\n\n    }\n\n    componentDidMount() {\n        // console.log('mounted component', this.props);\n        this.setState(this.props.church)\n    }\n\n    updateSubmit(e) {\n        e.preventDefault();\n        let church = Object.assign({},this.state);\n        delete church.preview\n        this.props.updateSubmit(church)\n    }\n\n\n    render(){\n\n        return(\n            <Form onSubmit={this.updateSubmit}>\n                <label>Church name:\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\n                </label>\n\n                <label>Website Link\n                <input type=\"text\" name=\"website\" value={this.state.website} onChange={this.handleChange}/>\n                </label>\n\n                <label>Address:\n                <input type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange}/>\n                </label>\n\n                <Form.Group>\n                    <Form.Label>Denomination Type</Form.Label>\n                    <Form.Control as=\"select\" defaultValue={this.state.denomination} name=\"denomination\" onChange={this.handleChange}>\n                        <option value=\"\" disabled>Please Choose selcetion:</option>\n                        <option value=\"NON DENOMINATIONAL\">Non Denominational</option>\n                        <option value=\"CATHOLIC\">Catholic</option>\n                        <option value=\"ADVENTIST\">Adventist</option>\n                        <option value=\"ANABAPTIST\">Anabaptist</option>\n                        <option value=\"ANGLICAN\">Anglican</option>\n                        <option value=\"BAPTIST\">Baptist</option>\n                        <option value=\"CALVINIST\">Calvinist</option>\n                        <option value=\"EVANGELICAL\">Evangelical</option>\n                        <option value=\"HOLINESS\">Holiness</option>\n                        <option value=\"LUTHERAN\">Lutheran</option>\n                        <option value=\"METHODIST\">Methodist</option>\n                        <option value=\"PENTECOSTAL\">Pentecostal</option>\n                        <option value=\"ASSYRIAN\">Assyrian</option>\n                        <option value=\"EASTERN ORTHODOX\">Eastern Orthodox</option>\n                        <option value=\"JEHOVAH'S WITNESS\">Jehovah's Witness</option>\n                        <option value=\"LATTER DAY SAINT\">Latter Day Saint</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Worship Type</Form.Label>\n                    <Form.Control as=\"select\" defaultValue={this.state.worship_type}  name=\"worship_type\" onChange={this.handleChange}>\n                        <option value=\"\"  disabled>Please Choose selcetion:</option>\n                        <option value=\"NON LITURGICAL\">Liturgical</option>\n                        <option value=\"TRADITIONAL\">Traditional</option>\n                        <option value=\"BLENDED\">Blended</option>\n                        <option value=\"CONTEMPORARY\">Contemporary</option>\n                        <option value=\"MODERN\">Modern</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <label>description\n                <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange}/>\n                </label>\n\n                <label>Add Profile Picture\n                <input type=\"file\" name=\"image\" onChange={this.handleChange}/>\n                </label>\n                {this.state.image ? (\n                    <img src={this.state.preview || this.state.image} alt=\"preview\"/>\n                ) : (\n                    null\n                )}\n\n                <button>Update</button>\n            </Form>\n        )\n    }\n}\n\nexport default UpdateChurchForm;\n","import React, {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass EventForm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            title:\"\",\n            description:\"\",\n            address:\"\",\n            date:\"\",\n\n        }\n        this.submitEvent = this.submitEvent.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        // console.log('mounted component', this.props);\n        this.setState({church:this.props.church.id})\n    }\n\n\n    handleChange(e){\n        // const target = e.target;\n        const name = e.target.name;\n        const value = e.target.value;\n\n\n        this.setState({[name]: value});\n        console.log({[name]: value})\n    }\n\n    submitEvent(e){\n        e.preventDefault();\n        let newEvent = Object.assign({},this.state);\n        this.props.submitEvent(newEvent);\n    }\n\n\n    render(){\n        return(\n            <Form onSubmit={this.submitEvent}>\n                <label>Event Title:\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange}/>\n                </label>\n\n                <label>Description\n                <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange}/>\n                </label>\n\n                <label>Address for event:\n                <input type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange}/>\n                </label>\n\n                <label>Date:\n                <input type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleChange}/>\n                </label>\n                <button>Create Event</button>\n            </Form>\n        )\n    }\n}\n\nexport default EventForm;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport Geocode from \"react-geocode\";\nimport UpdateChurchForm from \"./UpdateChurchForm\";\nimport EventForm from \"./EventForm\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\nGeocode.setLanguage(\"en\");\n\n\nclass Profile extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isEditing: false,\n            addingEvent: false,\n            church_list:[],\n            church: {},\n        }\n        this.deleteChurch = this.deleteChurch.bind(this);\n        this.editChurch = this.editChurch.bind(this);\n        this.updateSubmit = this.updateSubmit.bind(this);\n        this.handleImageChange = this.handleImageChange.bind(this);\n\n        this.addingEvent = this.addingEvent.bind(this);\n        this.submitEvent = this.submitEvent.bind(this);\n    }\n\n\n\n    componentDidMount(){\n        axios.get(\"/api/v1/user/churches/\", {headers: {'Authorization': `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token}`}})\n        .then(res =>{\n            this.setState({church_list: res.data});\n\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n    }\n\n    handleImageChange(e){\n        let file = e.target.files[0]\n        // the way not using []\n        let church = Object.assign({}, this.state.church);\n        church.image = file;\n\n        this.setState({image: file, church});\n\n        // optional visual for users\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n\n        // asynconios\n        reader.readAsDataURL(file);\n\n    }\n\n\n\n\n    deleteChurch(church){\n        axios.delete(`/api/v1/churches/${church.id}/`, {headers: {'Authorization': `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token}`}})\n        .then(res =>{\n            let church_list = [...this.state.church_list];\n            let index = church_list.indexOf(res.data);\n            church_list.splice(index, 1);\n            this.setState({church_list});\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    }\n\n    editChurch(church){\n        this.setState((prevState)=>({isEditing: !prevState.isEditing , church:church ,name:church.name,description:church.description,denomination:church.denomination,website:church.website,worship_type:church.worship_type,address:church.address,lat:church.lat, lng:church.lng })\n         )\n    }\n\n    addingEvent(church){\n        this.setState((prevState)=>({addingEvent: !prevState.addingEvent ,church}))\n\n        // you have all the event details passed up from the EventForm\n        // you have access to the church object in this component\n        // take the information that is passed up and connect with the church id\n    }\n\n    submitEvent(newEvent){\n        let formData = new FormData();\n        for (var key in newEvent) {\n            formData.append(key, newEvent[key]);\n        }\n\n        let messageSubscribers = () => {\n            // do stuff here\n        }\n\n\n        axios.post(\"/api/v1/user/church/events/\", formData ,{\n            headers: {\n                'Authorization': `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token}`,\n                \"content-type\": \"multipart/form-data\"\n            }\n        }).then(res =>{\n            axios.post()\n            this.setState((prevState)=>({addingEvent: !prevState.addingEvent}));\n            // messageSubscribers();\n\n        }).catch(error => {\n            console.log(error)\n        });\n\n\n\n    }\n\n    updateSubmit(church){\n        console.log('updated church', church);\n        let updateChurch = () =>{\n            let formData = new FormData();\n            let church = Object.assign({}, this.state.church);\n\n            if(typeof church.image === \"string\") {\n                delete church.image\n            }\n            delete church.owner\n            delete church.is_verified\n\n            for (var key in church) {\n                formData.append(key, church[key]);\n            }\n\n            axios.patch(`/api/v1/churches/${this.state.church.id}/`, formData, {\n                headers: {\n                    'Authorization': `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token}`,\n                    \"content-type\": \"multipart/form-data\"\n                }\n            })\n            .then(res => {\n                let church_list = [...this.state.church_list];\n                let church = church_list.find(church => {\n                    return church.id === res.data.id\n                });\n                church = Object.assign(church, res.data);\n\n\n                this.setState((prevState, props) => ({isEditing: !prevState.isEditing, church_list:church_list}));\n\n            })\n            .catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        let geocode = () => {\n            Geocode.fromAddress(this.state.address).then(\n              response => {\n                let { lat, lng } = response.results[0].geometry.location;\n                let church = Object.assign({}, this.state.church);\n                church[\"lat\"]=lat;\n                church[\"lng\"]=lng;\n                this.setState({lat:lat, lng:lng, church});\n                updateChurch(this.state.church);\n              },\n              error => {\n                console.error(error);\n            });\n        }\n\n        this.setState({church}, geocode);\n    }\n\n\n    render(){\n        const isEditing = this.state.isEditing;\n        const addingEvent = this.state.addingEvent;\n\n        let churchList = this.state.church_list.map(church => (\n                <li key={church.id}>\n                <h2>{church.name}</h2>\n                <img src={church.image} alt=\"church profile\" />\n                <p>{church.description}</p>\n                <p>{church.denomination}</p>\n                <p>{church.worship_type}</p>\n                <p>{church.website}</p>\n                <p>{church.address}</p>\n\n                <button onClick={() => this.addingEvent(church)}>Add Event</button>\n                <button onClick={() => this.editChurch(church)}>Edit Church</button>\n                <button onClick={() => this.deleteChurch(church)}>Delete Church</button>\n                </li>\n        ));\n\n        if(this.state.isEditing) {\n            return <UpdateChurchForm church={this.state.church} updateSubmit={this.updateSubmit}/>\n        }\n\n        if(this.state.addingEvent) {\n            return <EventForm church={this.state.church} submitEvent={this.submitEvent} />\n        }\n        return(\n            <ul>\n                {churchList}\n            </ul>\n        )\n    }\n}\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport Form from 'react-bootstrap/Form';\nimport Geocode from \"react-geocode\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n// axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"my-app-user\") ? `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token} ` : null;\n\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\nGeocode.setLanguage(\"en\");\n\nclass CreateProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name:\"\",\n            image: null,\n            preview: null,\n            is_verified: false,\n            description:\"\",\n            denomination:\"\",\n            website:\"\",\n            worship_type:\"\",\n            address: \"\",\n            lat:0,\n            lng:0,\n            church_list:[]\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleImageChange = this.handleImageChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleChange(e){\n        let key = e.target.name;\n        const value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n        this.setState({[key]: value});\n    }\n\n    handleImageChange(e){\n        let file = e.target.files[0]\n        // the way not using []\n        this.setState({image: file});\n\n        // optional visual for users\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            this.setState({preview: reader.result});\n        };\n\n        // asynconios\n        reader.readAsDataURL(file);\n\n    }\n\n    // generateCoordinates() {\n    //\n    //     this.handleSubmit();\n    // }\n\n    handleSubmit(e){\n        e.preventDefault();\n\n        let createChurch = () => {\n\n            let formData = new FormData();\n            formData.append(\"name\", this.state.name);\n            formData.append(\"image\", this.state.image);\n            formData.append(\"is_verified\", this.state.is_verified);\n            formData.append(\"description\", this.state.description);\n            formData.append(\"denomination\", this.state.denomination);\n            formData.append(\"website\", this.state.website);\n            formData.append(\"worship_type\", this.state.worship_type);\n            formData.append(\"address\", this.state.address);\n            formData.append(\"lat\", this.state.lat);\n            formData.append(\"lng\", this.state.lng);\n\n\n            axios.post(\"/api/v1/churches/\", formData, {\n                headers: {\n                    \"content-type\": \"multipart/form-data\",\n                    'Authorization': `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token}`\n                }\n            })\n            .then(res => {\n                let church_list = [...this.state.church_list];\n                church_list.push(res.data);\n\n                this.setState({name:\"\",\n                image: null,\n                preview: null,\n                is_verified: false,\n                description:\"\",\n                denomination:\"\",\n                website:\"\",\n                worship_type:\"\",\n                address:\"\",\n                lng:0,\n                lat:0 });\n            })\n            .catch(error => {\n                console.log(error)\n            });\n        }\n\n        Geocode.fromAddress(this.state.address).then(\n          response => {\n            let { lat, lng } = response.results[0].geometry.location;\n            this.setState({lat:lat, lng:lng}, createChurch);\n\n          },\n          error => {\n            console.error(error);\n          });\n\n\n    }\n\n\n    render(){\n        // let recipes = this.state.recipes.map(recipe => (\n        //     <li key={recipe.id}>\n        //         <p>{recipe.title}</p>\n        //         <img src={recipe.image} alt=\"\"/>\n        //     </li>\n        // ))\n        return(\n            <React.Fragment>\n                <Form onSubmit={this.handleSubmit}>\n                    <label>Church name:\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\n                    </label>\n\n                    <label>Website Link:\n                    <input type=\"text\" name=\"website\" value={this.state.website} onChange={this.handleChange}/>\n                    </label>\n\n                    <label>Address:\n                    <input type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleChange}/>\n                    </label>\n\n                    <Form.Group>\n                        <Form.Label>Denomination Type</Form.Label>\n                        <Form.Control as=\"select\" name=\"denomination\" onChange={this.handleChange}>\n                            <option value=\"NON DENOMINATIONAL\">Non Denominational</option>\n                            <option value=\"CATHOLIC\">Catholic</option>\n                            <option value=\"ADVENTIST\">Adventist</option>\n                            <option value=\"ANABAPTIST\">Anabaptist</option>\n                            <option value=\"ANGLICAN\">Anglican</option>\n                            <option value=\"BAPTIST\">Baptist</option>\n                            <option value=\"CALVINIST\">Calvinist</option>\n                            <option value=\"EVANGELICAL\">Evangelical</option>\n                            <option value=\"HOLINESS\">Holiness</option>\n                            <option value=\"LUTHERAN\">Lutheran</option>\n                            <option value=\"METHODIST\">Methodist</option>\n                            <option value=\"PENTECOSTAL\">Pentecostal</option>\n                            <option value=\"ASSYRIAN\">Assyrian</option>\n                            <option value=\"EASTERN ORTHODOX\">Eastern Orthodox</option>\n                            <option value=\"JEHOVAH'S WITNESS\">Jehovah's Witness</option>\n                            <option value=\"LATTER DAY SAINT\">Latter Day Saint</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Worship Type</Form.Label>\n                        <Form.Control as=\"select\" name=\"worship_type\" onChange={this.handleChange}>\n                            <option value=\"NON LITURGICAL\">Liturgical</option>\n                            <option value=\"TRADITIONAL\">Traditional</option>\n                            <option value=\"BLENDED\">Blended</option>\n                            <option value=\"CONTEMPORARY\">Contemporary</option>\n                            <option value=\"MODERN\">Modern</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <label>description\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange}/>\n                    </label>\n\n                    <label>Add Profile Picture\n                    <input type=\"file\" name=\"image\" onChange={this.handleImageChange}/>\n                    </label>\n\n\n                    {this.state.image ? (\n                        <img src={this.state.preview} alt=\"preview\"/>\n                    ) : (\n                        null\n                    )}\n\n                    <button>Upload</button>\n                </Form>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CreateProfile;\n","import React, {Component} from 'react';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../Css/Header.css\"\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass Header extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n        }\n    }\n\n    logOut = () => {\n        axios.post(\"/api/v1/rest-auth/logout/\", {headers: {'Authorization': `Token ${JSON.parse(localStorage.getItem(\"my-app-user\")).token}`}})\n        .then(res => {\n            localStorage.removeItem(\"my-app-user\")\n            this.isAuthenticated()\n\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n    }\n\n    render(){\n        let isAuthenticated = localStorage.getItem(\"my-app-user\") !== null ? true: false;\n\n        return (\n            <Navbar collapseOnSelect expand=\"lg\" sticky=\"top\">\n              <Navbar.Brand className=\"title\" href=\"/\">Gathering Well</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\n                  { isAuthenticated ? (\n                        <Nav className=\"ml-auto\">\n                          <Nav.Link className=\"navlink\" href=\"/\">Home</Nav.Link>\n                          <Nav.Link className=\"navlink\" href=\"/profile/\">Profile</Nav.Link>\n                          <Nav.Link className=\"navlink\" href=\"/profile/create/\">Submit Church</Nav.Link>\n                          <Nav.Link className=\"navlink\" onClick={this.logOut} href=\"/\">Log Out</Nav.Link>\n                        </Nav>\n                      ) : (\n                        <Nav className=\"ml-auto\">\n                          <Nav.Link className=\"navlink\" href=\"/\">Home</Nav.Link>\n                          <Nav.Link className=\"navlink\" href=\"/login/\">Church Login</Nav.Link>\n                          <Nav.Link className=\"navlink\" href=\"/profile/\">Account</Nav.Link>\n                          <Nav.Link className=\"navlink\" href=\"/profile/create/\">Submit Church</Nav.Link>\n                        </Nav>\n                      )\n                    }\n              </Navbar.Collapse>\n            </Navbar>\n\n        )\n    }\n}\n\nexport default Header;\n","import React , {Component} from 'react';\nimport \"../Css/Base.css\";\n\n\n\nimport Header from \"./Header\";\n\nclass BaseLayout extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n        }\n\n    }\n\n\n    render(){\n        console.log(this.state.isAuthenticated)\n      return (\n        <main className=\"container-fluid body\">\n            <Header/>\n            {this.props.children}\n\n        </main>\n      );\n    }\n}\n\nexport default BaseLayout;\n","import React from 'react';\nimport {Redirect , Route} from \"react-router-dom\";\n\n\nconst PrivateRoute = ({component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem(\"my-app-user\") !== null ? (\n            <Component {...props}/>\n        ) : (\n            <Redirect to={{\n                pathname: \"/login/\",\n                state: {from: props.location}\n            }}/>\n        )\n    )}/>\n);\n\nexport default PrivateRoute;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './components/Login';\nimport Parent from \"./components/Parent\";\nimport SignUp from \"./containers/SignUp\";\nimport Profile from \"./components/Profile\";\nimport CreateProfile from \"./containers/CreateProfile\";\nimport BaseLayout from \"./components/BaseLayout\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <BaseLayout>\n            <Switch>\n                <PrivateRoute path=\"/profile/create/\" component={CreateProfile}/>\n                <PrivateRoute path=\"/profile/\" component={Profile}/>\n                <Route path=\"/signup/\" component={SignUp}/>\n                <Route path='/login/' component={Login}/>\n                <Route exact path=\"/\" component={Parent}/>\n            </Switch>\n        </BaseLayout>\n        <link href=\"https://fonts.googleapis.com/css?family=Sirin+Stencil&display=swap\" rel=\"stylesheet\"/>\n    </Router>\n, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}